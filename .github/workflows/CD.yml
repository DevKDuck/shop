# workflow의 이름
name: CD

# 해당 workflow가 언제 실행될 것인지에 대한 트리거를 지정
on:
  push:
    branches: [ main ] # main branch로 push 될 때 실행됩니다.

# 해당 yml 내에서 사용할 key - value
env:
  S3_BUCKET_NAME: duckshop-bucket
  PROJECT_NAME: duckshop

# workflow는 한 개 이상의 job을 가지며, 각 job은 여러 step에 따라 단계를 나눌 수 있습니다.
jobs:
  build:
    name: CD
    runs-on: ubuntu-latest

    steps:
     # GitHub repository를 체크아웃합니다.
      - uses: actions/checkout@v4

      # Java 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      # Maven 빌드 명령어 실행 (Gradle 대신 Maven 사용)
      - name: Build with Maven
        run: mvn clean package
        working-directory: ./duckshop  # 올바른 경로로 수정
      
      # 빌드된 JAR 파일이 있는 target 경로로 이동
      - name: Move to target directory
        run: ls ./duckshop/target

      # JAR 파일을 압축합니다.
      - name: Make zip file
        run: zip -r ./duckshop_$GITHUB_SHA.zip ./duckshop/target/shop-0.0.1-SNAPSHOT.jar

      # AWS 자격증명 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      # S3에 압축된 JAR 파일 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./duckshop_$GITHUB_SHA.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$GITHUB_SHA.zip
      
      # Deploy
      - name: Deploy
        run: |
          aws deploy create-deployment \
            --application-name duckshop \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name duckshop-cicd-prod \
            --file-exists-behavior OVERWRITE \
            --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$PROJECT_NAME/$GITHUB_SHA.zip \
            --region ap-northeast-2
